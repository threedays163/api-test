<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.huatu.paike.dal.goodsOrder.mapper.OrderVersionMapper">
  <resultMap id="BaseResultMap" type="com.huatu.paike.dal.goodsOrder.entity.OrderVersion">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="ID" jdbcType="BIGINT" property="id" />
    <result column="ORDER_NO" jdbcType="VARCHAR" property="orderNo" />
    <result column="ORDER_GOODS_ID" jdbcType="BIGINT" property="orderGoodsId" />
    <result column="JSON" jdbcType="CHAR" property="json" />
    <result column="SEQ_NUM" jdbcType="INTEGER" property="seqNum" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
    <result column="SOURCE" jdbcType="VARCHAR" property="source" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
    -->
    ID, ORDER_NO, ORDER_GOODS_ID, JSON, SEQ_NUM, CREATE_TIME, `SOURCE`
  </sql>
  <delete id="deleteByFilter" parameterType="com.huatu.paike.dal.goodsOrder.entity.OrderVersionCriteria">
    <!--
      WARNING - @mbg.generated
    -->
    delete from order_version
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  
  <insert id="batchInsert">
      insert IGNORE into order_version(ORDER_NO, ORDER_GOODS_ID, JSON, SEQ_NUM, `SOURCE`) values
    <foreach collection="list" item="item" separator=",">
      (
        #{item.orderNo},#{item.orderGoodsId},#{item.json},#{item.seqNum},#{item.source}
      )
    </foreach>
  </insert>
  
  <select id="getNewestVersion" resultMap="BaseResultMap">
  	select <include refid="Base_Column_List"/> from order_version
  	<where>
  		and order_no = #{orderNo}
  	</where>
  	order by SEQ_NUM desc limit 1
  </select>

    <insert id="addVersion">
        INSERT INTO order_version(ORDER_NO, ORDER_GOODS_ID, JSON, SEQ_NUM, `SOURCE`) VALUES (#{item.orderNo},#{item.orderGoodsId},#{item.json},#{item.seqNum})
    </insert>

    <select id="getNewestVersionByOrderGoodsIds" resultMap="BaseResultMap">
        SELECT *
        FROM(
          SELECT * FROM order_version
          <where>
            order_goods_id IN
            <foreach collection="orderGoodsIds" item="item" open="(" separator="," close=")">
              #{item}
            </foreach>
          </where> ORDER BY seq_num DESC LIMIT 1000000000000000
        )t
        GROUP BY t.ORDER_GOODS_ID
    </select>

    <select id="getNewestVersionByOrderNos" resultMap="BaseResultMap">
      SELECT *
      FROM(
        SELECT * FROM order_version
        <where>
          ORDER_NO IN
          <foreach collection="orderNos" item="item" open="(" separator="," close=")">
            #{item}
          </foreach>
        </where> ORDER BY seq_num DESC LIMIT 1000000000000000
      )t
      GROUP BY t.ORDER_NO
    </select>

    <select id="queryNewOrderVersionByOrderId" resultMap="BaseResultMap">
        SELECT *
        FROM(
            select ov.*
            from order_info oi JOIN order_version ov ON oi.order_no=ov.order_no
            <where>
                oi.ID IN
                <foreach
                        collection="collection" item="item" close=")" open="(" separator=",">
                      #{item}
                </foreach>
                order by ov.seq_num DESC limit 1000000000000000
            </where>
        ) t
        GROUP BY t.ORDER_NO
    </select>
</mapper>