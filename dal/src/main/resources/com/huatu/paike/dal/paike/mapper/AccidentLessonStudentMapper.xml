<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.huatu.paike.dal.paike.mapper.AccidentLessonStudentMapper">
  <resultMap id="BaseResultMap" type="com.huatu.paike.dal.paike.entity.AccidentLessonStudent">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="ID" jdbcType="BIGINT" property="id" />
    <result column="ACCIDENT_ID" jdbcType="BIGINT" property="accidentId" />
    <result column="CLASS_ID" jdbcType="BIGINT" property="classId" />
    <result column="STAGE_ID" jdbcType="BIGINT" property="stageId" />
    <result column="SUBJECT_ID" jdbcType="BIGINT" property="subjectId" />
    <result column="BATCH_NUM" jdbcType="INTEGER" property="batchNum" />
    <result column="NODE_ID" jdbcType="BIGINT" property="nodeId" />
    <result column="LESSON_ID" jdbcType="BIGINT" property="lessonId" />
    <result column="ORDER_NO" jdbcType="VARCHAR" property="orderNo" />
    <result column="STUDENT_ID" jdbcType="BIGINT" property="studentId" />
    <result column="PRICE" jdbcType="BIGINT" property="price" />
    <result column="COST" jdbcType="BIGINT" property="cost" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
    <result column="UPDATE_TIME" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="CREATOR_ID" jdbcType="BIGINT" property="creatorId" />
    <result column="GOODS_NO" jdbcType="VARCHAR" property="goodsNo" />
    <result column="IS_RECOMPLETE" jdbcType="BIT" property="isRecomplete" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
    -->
    ID, ACCIDENT_ID, CLASS_ID, STAGE_ID, SUBJECT_ID, BATCH_NUM, NODE_ID, LESSON_ID, ORDER_NO, 
    STUDENT_ID, PRICE, COST, CREATE_TIME, UPDATE_TIME, CREATOR_ID, GOODS_NO, IS_RECOMPLETE
  </sql>
  <delete id="deleteByFilter" parameterType="com.huatu.paike.dal.paike.entity.AccidentLessonStudentCriteria">
    <!--
      WARNING - @mbg.generated
    -->
    delete from accident_lesson_student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>

  <insert id="insertBatch" parameterType="java.util.List">
    INSERT INTO ACCIDENT_LESSON_STUDENT(ACCIDENT_ID, CLASS_ID, STAGE_ID, SUBJECT_ID,
    BATCH_NUM, NODE_ID, LESSON_ID, ORDER_NO, STUDENT_ID, PRICE, COST, CREATE_TIME,
    UPDATE_TIME, CREATOR_ID, GOODS_NO, IS_RECOMPLETE) values
    <foreach collection="list" separator="," item="accident" >
      (#{accident.accidentId}, #{accident.classId}, #{accident.stageId}, #{accident.subjectId}, #{accident.batchNum},
      #{accident.nodeId},#{accident.lessonId}, #{accident.orderNo}, #{accident.studentId}, #{accident.price},
      #{accident.cost}, #{accident.createTime}, #{accident.updateTime},#{accident.creatorId}, #{accident.goodsNo},
      #{accident.isRecomplete})
    </foreach>
  </insert>
</mapper>