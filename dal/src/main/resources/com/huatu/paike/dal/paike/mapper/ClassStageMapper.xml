<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.huatu.paike.dal.paike.mapper.ClassStageMapper">
  <resultMap id="BaseResultMap" type="com.huatu.paike.dal.paike.entity.ClassStage">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="ID" jdbcType="BIGINT" property="id" />
    <result column="CLASS_ID" jdbcType="BIGINT" property="classId" />
    <result column="STAGE_ID" jdbcType="BIGINT" property="stageId" />
    <result column="BATCH_NUM" jdbcType="INTEGER" property="batchNum" />
    <result column="TOTAL_DURATION" jdbcType="INTEGER" property="totalDuration" />
    <result column="PAIKE_DURATION" jdbcType="INTEGER" property="paikeDuration" />
    <result column="FINISH_DURATION" jdbcType="INTEGER" property="finishDuration" />
    <result column="STATUS" jdbcType="TINYINT" property="status" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
    <result column="UPDATE_TIME" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="START_DATE" jdbcType="TIMESTAMP" property="startDate" />
    <result column="END_DATE" jdbcType="TIMESTAMP" property="endDate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
    -->
    ID, CLASS_ID, STAGE_ID, BATCH_NUM, TOTAL_DURATION, PAIKE_DURATION, FINISH_DURATION, 
    `STATUS`, CREATE_TIME, UPDATE_TIME, START_DATE, END_DATE
  </sql>
  <delete id="deleteByFilter" parameterType="com.huatu.paike.dal.paike.entity.ClassStageCriteria">
    <!--
      WARNING - @mbg.generated
    -->
    delete from class_stage
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  
  <!-- 查询班级阶段状态 -->
  <select id="queryStageStatusByClass" resultType="map">
  	select stage_id,status  from class_stage where class_id=#{classID} group by stage_id
  </select>
  
  <!-- 查询班级里可操作的阶段 -->
  <select id="queryCanDealStageByClass" resultMap="BaseResultMap">
  	select * from class_stage where class_id=#{classID} and status&gt;=4 order by stage_id ASC
  </select>
  
  <!-- 查询给定班级和阶段的信息 -->
  <select id="queryStageByClass" resultMap="BaseResultMap">
  	select cs.stage_id,cs.* from class_stage cs where cs.class_id=#{classID}
  	<if test="stageIDs!=null and stageIDs.size()&gt;0">
	  	and cs.stage_id in
	  	<foreach close=")" collection="stageIDs" item="item" open="(" separator=",">
	  		#{item}
	  	</foreach>
  	</if>
  	
  </select>
  
	<select id="queryStageBatchNumByClass" resultMap="BaseResultMap">
	 	select cs.* from class_stage cs where cs.class_id=#{classId} 
	 	<if test="stageBatchs!=null and stageBatchs.size>0">
	 		and (cs.stage_id,cs.batch_num) in
	 		<foreach collection="stageBatchs" close=")" item="item" open="(" separator=",">
	 			(#{item.stageId},#{item.batchNum})
	 		</foreach>
	 	</if>
	 	order by cs.batch_num,cs.stage_id ASC
	</select>
  
  	<select id="queryStageBatchStatus" resultType="map">
  		select stage_id,batch_num,status from class_stage where class_id=#{classId}
  		<if test="stageBatchs!=null and stageBatchs.size>0" >
  			and (stage_id,batch_num) in
  			<foreach collection="stageBatchs" close=")" item="item" open="(" separator=",">
  				(#{item.stageId},#{item.batchNum})
  			</foreach>
  		</if>
  	</select>
  
	<select id="queryByClassStageBatch" resultMap="BaseResultMap">
		select * from class_stage where class_id=#{classId}
		<if test="stageBatchs!=null and stageBatchs.size>0">
			and (stage_id,batch_num) in
			<foreach collection="stageBatchs" close=")" item="item" open="(" separator=",">
				(#{item.stageId},#{item.batchNum})
			</foreach>
		</if>
	</select>

	<insert id="insertBatch" parameterType="java.util.List">
		insert into class_stage (CLASS_ID, STAGE_ID, BATCH_NUM, TOTAL_DURATION) values
		<foreach collection="list" item="stage" separator=",">
		(#{stage.classId},#{stage.stageId},#{stage.batchNum},#{stage.totalDuration})
		</foreach>
	</insert>
	
	<!-- 更新 -->
	<update id="updateByClassStage" parameterType="com.huatu.paike.dal.paike.entity.ClassStage">
		update class_stage
		<trim prefix="set" suffixOverrides=",">
			<if test="totalDuration!=null">
				total_duration=#{totalDuration},
			</if>
			<if test="paikeDuration!=null">
				paike_duration=#{paikeDuration},
			</if>
			<if test="finishDuration!=null">
				finish_duration=#{finishDuration},
			</if>
			<if test="status!=null">
				status=#{status},
			</if>
			<if test="updateTime!=null">
				update_time=#{updateTime},
			</if>
			<if test="startDate!=null">
				start_date=#{startDate},
			</if>
			<if test="endDate!=null">
				end_date=#{endDate},
			</if>
		</trim>
		<where>
			class_id=#{classId} and stage_id=#{stageId} and batch_num=#{batchNum}
		</where>
	</update>
	
	<!-- 查询班级当前最大的批次号 -->
	<select id="queryMaxBatchNumInClass" resultType="int">
		select max(batch_num) from class_stage where class_id=#{classId}
	</select>
	
	<update id="updateStatus">
		update class_stage set status=#{status} where class_id=#{classId} and (stage_id,batch_num) in
		<foreach collection="stageBatchs" close=")" item="item" open="(" separator=",">
			(#{item.stageId},#{item.batchNum})
		</foreach>
	</update>

	<select id="querySubjectStatusFeedback" resultMap="BaseResultMap">
		SELECT
			cs.*
		FROM
			class_stage cs
		<where>
			(class_id,stage_id,batch_num) IN
			<foreach collection="list" close=")" separator="," open="(" item="item">
				(#{item.classId},#{item.stageId},#{item.batchNum})
			</foreach>
			AND
			cs.TOTAL_DURATION=
			(SELECT SUM(css.TOTAL_DURATION) as `sum`
			FROM
			class_stage_subject css
			WHERE
			css.class_id=cs.class_id
			AND css.stage_id=cs.stage_id
			AND css.batch_num=cs.batch_num
			AND css.STATUS=#{status}
			)
		</where>
	</select>
	
	<update id="updatePaikeDuration">
		update class_stage set PAIKE_DURATION = PAIKE_DURATION + #{duration} 
		where class_id = #{classId} and stage_id = #{stageId} and batch_num = #{batchNum}
	</update>
	
	<update id="updateFinishDuration">
		update class_stage set FINISH_DURATION = FINISH_DURATION + #{duration} 
		where class_id = #{classId} and stage_id = #{stageId} and batch_num = #{batchNum}
	</update>

	<update id="update" parameterType="com.huatu.paike.dal.paike.entity.ClassStage">
		UPDATE class_stage
		SET start_date=#{startDate},end_date=#{endDate},status=#{status},update_time=#{updateTime}
		<where>
			id=#{id}
		</where>
	</update>
</mapper>