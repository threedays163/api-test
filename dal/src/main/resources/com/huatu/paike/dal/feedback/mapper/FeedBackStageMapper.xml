<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.huatu.paike.dal.feedback.mapper.FeedBackStageMapper">
    <resultMap id="BaseResultMap" type="com.huatu.paike.dal.feedback.entity.FeedBackStage">
        <!--
          WARNING - @mbg.generated
        -->
        <id column="ID" jdbcType="BIGINT" property="id"/>
        <result column="FEED_BACK_ID" jdbcType="BIGINT" property="feedBackId"/>
        <result column="BATCH_NUM" jdbcType="INTEGER" property="batchNum"/>
        <result column="STAGE_ID" jdbcType="BIGINT" property="stageId"/>
        <result column="SUBJECT_ID" jdbcType="BIGINT" property="subjectId"/>
        <result column="CLASS_ID" jdbcType="BIGINT" property="classId"/>
        <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="UPDATE_TIME" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="CREATOR_ID" jdbcType="BIGINT" property="creatorId"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <!--
          WARNING - @mbg.generated
        -->
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        <!--
          WARNING - @mbg.generated
        -->
        ID, FEED_BACK_ID, BATCH_NUM, STAGE_ID, SUBJECT_ID, CLASS_ID, CREATE_TIME, UPDATE_TIME, CREATOR_ID
    </sql>
    <delete id="deleteByFilter" parameterType="com.huatu.paike.dal.feedback.entity.FeedBackStageCriteria">
        <!--
          WARNING - @mbg.generated
        -->
        delete from feed_back_stage
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>

    <!-- 查询班级里已经反馈的阶段 逻辑上一个阶段只能被反馈一次 -->
    <select id="queryHaveFeedbackStageByClass" resultType="Long">
  	select fbs.stage_id from feed_back_stage fbs,feed_back fb where fbs.feed_back_id=fb.id and fb.class_id=#{classID} and fb.status=7 
  </select>

    <resultMap id="stageBatchMap" type="com.huatu.paike.StageBatchDto" autoMapping="true">
        <result column="stage_id" property="stageId"/>
        <result column="batch_num" property="batchNum"/>
    </resultMap>

    <!-- 查询班级之前存在但没有反馈的阶段 -->
    <select id="queryNotFeedbackByClassID" resultMap="stageBatchMap">
  	select fbs.stage_id as stage_id,fbs.batch_num as batch_num from feed_back_stage fbs,feed_back fb where fb.class_id=#{classID} and fbs.feed_back_id=fb.id and fb.status=5
  </select>

    <!-- 通过班级和阶段更新feed_back_id -->
    <update id="updateFeedbackID">
  	update feed_back_stage set feed_back_id=#{feedbackID} where class_id=#{classID} and stage_id=#{stageID} and batch_num=#{batchNum}
  </update>

    <!-- 查询给定的班级和阶段现在的反馈编号 -->
    <select id="queryFeedbackNoByClassStages" resultMap="BaseResultMap">
        select * from feed_back_stage where class_id=#{classID} and (stage_id,batch_num) in
        <foreach close=")" collection="stageBatchs" item="item" open="(" separator=",">
            (#{item.stageId},#{item.batchNum})
        </foreach>

    </select>

    <!-- 对以前要反馈,现在不准备反馈的阶段,进行删除,取消和反馈的关联 -->
    <delete id="deleteNotFeedBackStage">
  	delete from feed_back_stage  where class_id=#{classID} and stage_id=#{stageID} and batch_num=#{batchNum}
  </delete>

    <!-- 根据反馈编号批量查询反馈阶段 -->
    <select id="queryByFeedbackNos" resultMap="BaseResultMap">
        select fbs.* from feed_back_stage fbs,feed_back fb where fb.id=fbs.feed_back_id
        <if test="feedbackNos!=null and feedbackNos.size()&gt;0">
            and fb.feedback_no in
            <foreach close=")" collection="feedbackNos" item="item" open="(" separator=",">
                #{item}
            </foreach>
        </if>
    </select>

    <sql id="queryIfHaveFeedbackWithDefault">
        SELECT
            fbs.*
        FROM
            feed_back fb
            JOIN feed_back_stage fbs ON fb.ID = fbs.FEED_BACK_ID
        WHERE
            fbs.SUBJECT_ID !=-1
            AND fb.`STATUS` IN (6,7)
            AND fb.CLASS_ID =#{classId}
            AND ( fbs.STAGE_ID, fbs.SUBJECT_ID, fbs.BATCH_NUM ) IN
            <foreach collection="stageBatchs" close=")" item="item" open="(" separator=",">
                (#{item.stageId},#{item.subjectId},#{item.batchNum})
            </foreach>
    </sql>

    <sql id="queryIfHaveFeedback">
        SELECT
            fbs.*
        FROM
            feed_back fb
            JOIN feed_back_stage fbs ON fb.ID = fbs.FEED_BACK_ID
            AND fbs.SUBJECT_ID =-1
            JOIN class_stage_subject css ON fbs.CLASS_ID = css.CLASS_ID
            AND fbs.STAGE_ID = css.STAGE_ID
            AND fbs.SUBJECT_ID = css.SUBJECT_ID
            AND fbs.BATCH_NUM = css.BATCH_NUM
        WHERE
          fb.`STATUS` IN (6,7)
          AND fb.CLASS_ID= #{classId}
          AND ( fbs.STAGE_ID, fbs.SUBJECT_ID, fbs.BATCH_NUM ) IN
        <foreach collection="stageBatchs" separator="," open="(" item="item" close=")">
            (#{item.stageId},#{item.subjectId},#{item.batchNum})
        </foreach>
    </sql>

    <select id="selectIfExistsInFeedback" resultMap="BaseResultMap">
        select
          distinct tem.*
        from
        (
            <include refid="queryIfHaveFeedbackWithDefault"/>
            union
            <include refid="queryIfHaveFeedback"/>
        ) tem
    </select>

    <select id="queryStageFeedbackStatus" resultMap="com.huatu.paike.dal.feedback.mapper.FeedBackMapper.BaseResultMap">
        select distinct fb.*
        from feed_back_stage fbs, feed_back fb
        <where>
            fb.class_id=#{classId} and
            fbs.feed_back_id=fb.id
            <if test="stageBatchs!=null and stageBatchs.size&gt;0">
                and (fbs.stage_id,fbs.subject_id,fbs.batch_num) in
                <foreach close=")" collection="stageBatchs" item="item" open="(" separator=",">
                    (#{item.stageId},#{item.subjectId},#{item.batchNum})
                </foreach>
            </if>
        </where>
    </select>

    <sql id="queryByDefaultSubject">
        SELECT
            fbs.ID,fbs.FEED_BACK_ID,fbs.CLASS_ID,fbs.BATCH_NUM,fbs.STAGE_ID,css.SUBJECT_ID,fbs.CREATE_TIME,fbs.UPDATE_TIME,fbs.CREATOR_ID
        FROM
            feed_back fb,
            feed_back_stage fbs,
            class_stage_subject css
        WHERE
            fb.ID = fbs.FEED_BACK_ID
            AND fb.CLASS_ID = #{classId}
            AND fbs.SUBJECT_ID=-1
            AND fbs.CLASS_ID=css.CLASS_ID
            AND fbs.STAGE_ID=css.STAGE_ID
            AND fbs.BATCH_NUM=css.BATCH_NUM
            AND fb.`STATUS` = #{status}
    </sql>
    <sql id="queryByNotDefaultSubject">
        SELECT
            fbs.ID,fbs.FEED_BACK_ID,fbs.CLASS_ID,fbs.BATCH_NUM,fbs.STAGE_ID,fbs.SUBJECT_ID,fbs.CREATE_TIME,fbs.UPDATE_TIME,fbs.CREATOR_ID
        FROM
            feed_back fb,
            feed_back_stage fbs
        WHERE
            fb.ID = fbs.FEED_BACK_ID
            AND fb.CLASS_ID = #{classId}
            AND fbs.SUBJECT_ID!=-1
            AND fb.`STATUS`= #{status}
    </sql>

    <sql id="pageTool">
        <if test="pageDto != null">
            limit ${(pageDto.pageNum-1)*pageDto.pageSize},#{pageDto.pageSize}
        </if>
    </sql>

    <select id="queryByClassIdAndStatus" resultMap="BaseResultMap">
        SELECT *
        FROM
        (
            <include refid="queryByDefaultSubject"/>
            UNION
            <include refid="queryByNotDefaultSubject"/>
        ) tem
        <include refid="pageTool"/>
    </select>

    <select id="countByClassIdAndStatus" resultType="int">
        SELECT COUNT(1)
        FROM
        (
            <include refid="queryByDefaultSubject"/>
            UNION
            <include refid="queryByNotDefaultSubject"/>
        ) tem
    </select>
</mapper>