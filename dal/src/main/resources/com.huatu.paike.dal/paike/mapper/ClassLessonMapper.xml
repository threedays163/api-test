<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.huatu.paike.dal.paike.mapper.ClassLessonMapper">
  <resultMap id="BaseResultMap" type="com.huatu.paike.dal.paike.entity.ClassLesson">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="ID" jdbcType="BIGINT" property="id" />
    <result column="CSST_ID" jdbcType="BIGINT" property="csstId" />
    <result column="CLASS_ID" jdbcType="BIGINT" property="classId" />
    <result column="ROOM_ID" jdbcType="BIGINT" property="roomId" />
    <result column="STAGE_ID" jdbcType="BIGINT" property="stageId" />
    <result column="SUBJECT_ID" jdbcType="BIGINT" property="subjectId" />
    <result column="BATCH_NUM" jdbcType="INTEGER" property="batchNum" />
    <result column="NODE_ID" jdbcType="BIGINT" property="nodeId" />
    <result column="LESSON_DATE" jdbcType="TIMESTAMP" property="lessonDate" />
    <result column="LESSON_DURATION" jdbcType="INTEGER" property="lessonDuration" />
    <result column="START_TIME" jdbcType="TIMESTAMP" property="startTime" />
    <result column="END_TIME" jdbcType="TIMESTAMP" property="endTime" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
    <result column="UPDATE_TIME" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="CREATOR_ID" jdbcType="BIGINT" property="creatorId" />
    <result column="IS_ADDITIONAL" jdbcType="BIT" property="isAdditional" />
    <result column="STATUS" jdbcType="TINYINT" property="status" />
    <result column="HAS_COST" jdbcType="BIT" property="hasCost" />
    <result column="HAS_REWARD" jdbcType="BIT" property="hasReward" />
    <result column="TEACHER_STAFF_NO" jdbcType="VARCHAR" property="teacherStaffNo" />
    <result column="IS_LOCAL" jdbcType="BIT" property="isLocal" />
    <result column="IS_DISCARD" jdbcType="BIT" property="isDiscard" />
    <result column="TEACH_WAY" jdbcType="TINYINT" property="teachWay" />
    <result column="LESSON_TABLE_DETAIL_ID" jdbcType="BIGINT" property="lessonTableDetailId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
    -->
    ID, CSST_ID, CLASS_ID, ROOM_ID, STAGE_ID, SUBJECT_ID, BATCH_NUM, NODE_ID, LESSON_DATE,
    LESSON_DURATION, START_TIME, END_TIME, CREATE_TIME, UPDATE_TIME, CREATOR_ID, IS_ADDITIONAL,
    `STATUS`, HAS_COST, HAS_REWARD, TEACHER_STAFF_NO, IS_LOCAL, IS_DISCARD, TEACH_WAY,
    LESSON_TABLE_DETAIL_ID
  </sql>
  <delete id="deleteByFilter" parameterType="com.huatu.paike.dal.paike.entity.ClassLessonCriteria">
    <!--
      WARNING - @mbg.generated
    -->
    delete from class_lesson
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <sql id="Base_Column_List_alias">
		a.ID, a.CSST_ID, a.CLASS_ID, a.ROOM_ID, a.STAGE_ID, a.SUBJECT_ID,a.BATCH_NUM ,
		a.NODE_ID, a.LESSON_DATE, a.LESSON_DURATION,a.START_TIME, a.END_TIME,
		a.CREATE_TIME,a.UPDATE_TIME, a.CREATOR_ID, a.IS_ADDITIONAL,
		a.STATUS,a.HAS_COST,a.HAS_REWARD,a.TEACHER_STAFF_NO,a.IS_LOCAL,a.IS_DISCARD, a.TEACH_WAY ,a.LESSON_TABLE_DETAIL_ID
  </sql>

	<sql id="pageTool">
		<if test="pageDto != null">
			limit
			${(pageDto.pageNum-1)*pageDto.pageSize},#{pageDto.pageSize}
		</if>
	</sql>

	<!-- 班级维度查询课节 -->
	<select id="queryListByClassId" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List_alias" />
		from class_lesson a
		<where>
			and a.class_id = #{classId}
			<if test="null != csstId">
				and a.csst_id = #{csstId}
			</if>
			<if test="null != startTime">
				and a.start_time &gt;= #{startTime}
			</if>
			<if test="null != endTime">
				and #{endTime} &gt;= a.end_time
			</if>
		</where>
		order by a.start_time desc
		<if test="pageDto != null">
			limit
			${(pageDto.pageNum-1)*pageDto.pageSize},#{pageDto.pageSize}
		</if>
	</select>
	<select id="countByClassId" resultType="Integer">
		select count(a.id)
		from class_lesson a
		<where>
			and a.class_id = #{classId}
			<if test="null != csstId">
				and a.csst_id = #{csstId}
			</if>
			<if test="null != startTime">
				and a.start_time &gt;= #{startTime}
			</if>
			<if test="null != endTime">
				and #{endTime} &gt;= a.end_time
			</if>
		</where>
	</select>
	<!-- 老师维度查询课节 -->
	<select id="queryListByTeacherNos" resultMap="BaseResultMap">
		select
		distinct
		<include refid="Base_Column_List_alias" />
		from class_lesson a join lesson_teacher b on a.id = b.lesson_id
		<where>
			<if test="null != teacherNos and teacherNos.size() &gt; 0">
				and b.teacher_staff_no in
				<foreach close=")" collection="teacherNos" item="teacherNo" open="(" separator=",">
					#{teacherNo}
				</foreach>
			</if>
			<if test="null != csstId">
				and a.csst_id = #{csstId}
			</if>
			<if test="null != startTime">
				and a.start_time &gt;= #{startTime}
			</if>
			<if test="null != endTime">
				and #{endTime} &gt;= a.end_time
			</if>
		</where>
		order by a.start_time desc
		<if test="pageDto != null">
			limit
			${(pageDto.pageNum-1)*pageDto.pageSize},#{pageDto.pageSize}
		</if>
	</select>
	<select id="countByTeacherNos" resultType="Integer">
		select
		distinct count(a.id)
		from class_lesson a join lesson_teacher b on
		a.id = b.lesson_id
		<where>
			<if test="null != teacherNos and teacherNos.size() &gt; 0">
				and b.teacher_staff_no in
				<foreach close=")" collection="teacherNos" item="teacherNo" open="(" separator=",">
					#{teacherNo}
				</foreach>
			</if>
			<if test="null != csstId">
				and a.csst_id = #{csstId}
			</if>
			<if test="null != startTime">
				and a.start_time &gt;= #{startTime}
			</if>
			<if test="null != endTime">
				and #{endTime} &gt;= a.end_time
			</if>
		</where>
	</select>
	<!-- 学员维度查询课节 -->
	<select id="queryListByStudentId" resultMap="BaseResultMap">
		select
		distinct
		<include refid="Base_Column_List_alias" />
		from class_lesson a join lesson_student b on a.id = b.lesson_id
		<where>
			and b.student_id =#{studentId}
			<if test="null != csstId">
				and a.csst_id = #{csstId}
			</if>
			<if test="null != startTime">
				and a.start_time &gt;= #{startTime}
			</if>
			<if test="null != endTime">
				and #{endTime} &gt;= a.end_time
			</if>
		</where>
		order by a.start_time desc
		<if test="pageDto != null">
			limit
			${(pageDto.pageNum-1)*pageDto.pageSize},#{pageDto.pageSize}
		</if>
	</select>
	<select id="countByStudentId" resultType="Integer">
		select count(a.id)
		from class_lesson a join lesson_student b on
		a.id =
		b.lesson_id
		<where>
			and b.student_id =#{studentId}
			<if test="null != csstId">
				and a.csst_id = #{csstId}
			</if>
			<if test="null != startTime">
				and a.start_time &gt;= #{startTime}
			</if>
			<if test="null != endTime">
				and #{endTime} &gt;= a.end_time
			</if>
		</where>
	</select>

	<select id="queryListBySubject" resultMap="BaseResultMap">
		select *
		from
			class_lesson
		where
			class_id=#{classId} and
			stage_id=#{stageId} and
			subject_id=#{subjectId} and
			batch_num=#{batchNum} AND IS_DISCARD=0
		order by start_time desc
		<include refid="pageTool" />
	</select>


	<select id="queryListBySubjects" parameterType="com.huatu.paike.dal.goodsOrder.entity.DelOrderSubjectParam" resultMap="BaseResultMap">
		select *
		from
		class_lesson
		where
		IS_DISCARD=0 AND
		class_id=#{classId} and
		(stage_id, subject_id, batch_num) in
		<foreach collection="stageSubjectList" item="item" open="(" close=")" separator=",">
			(#{item.stageId}, #{item.subjectId}, #{item.batchNum})
		</foreach>
	</select>

	<select id="countBySubject" resultType="integer">
		select count(1) 
		from
			class_lesson
		where 
			class_id=#{classId} and 
			stage_id=#{stageId} and
			subject_id=#{subjectId} and 
			batch_num=#{batchNum} AND IS_DISCARD=0
	</select>

	<select id="queryConflictList" resultMap="BaseResultMap">
		SELECT
		<include refid="Base_Column_List_alias" />
		FROM CLASS_LESSON a left join
		LESSON_TEACHER b on
		a.ID =
		b.LESSON_ID
		<where>
			a.IS_DISCARD=0
			<if test="null != startTime">
				and a.END_TIME &gt;= #{startTime}
			</if>
			<if test="null !=endTime">
				and #{endTime} &gt;= a.START_TIME
			</if>
			<choose>
				<when test="null != roomIds and roomIds.size() &gt; 0 and null != teacherNos and teacherNos.size() &gt; 0">
					and ( a.room_id in
					<foreach close=")" collection="roomIds" item="roomId" open="(" separator=",">
						#{roomId}
					</foreach>
					or b.teacher_staff_no in
					<foreach close=")" collection="teacherNos" item="teacherNo" open="(" separator=",">
						#{teacherNo}
					</foreach>
					)
				</when>
				<otherwise>
					<if test="null != roomIds and roomIds.size() &gt; 0">
						and a.room_id in
						<foreach close=")" collection="roomIds" item="roomId" open="(" separator=",">
							#{roomId}
						</foreach>
					</if>
					<if test="null != teacherNos and teacherNos.size() &gt; 0">
						and b.teacher_staff_no in
						<foreach close=")" collection="teacherNos" item="teacherNo" open="(" separator=",">
							#{teacherNo}
						</foreach>
					</if>
				</otherwise>
			</choose>
		</where>
	</select>

	<select id="queryFinishedDurationByCSST" resultType="Map">
		select b.csst_id,sum(a.duration)
		from lesson_time_detail a
		join
		class_lesson b on a.lesson_id = b.id
		join lesson_student c on
		a.lesson_id = c.lesson_id
		<where>
			<if test="null != csstIds and csstIds.size() &gt; 0">
				and b.csst_id in
				<foreach close=")" collection="csstIds" item="csstId" open="(" separator=",">
					#{csstId}
				</foreach>
			</if>
			and #{now} &gt; a.start_time
			and c.student_id = #{studentId}
		</where>
		group by b.csst_id
	</select>

	<select id="queryCsstDaysMap" resultType="map">
		SELECT
		CSST_ID,count(DISTINCT LESSON_DATE) from CLASS_LESSON
		<where>
			<if test="null != csstIds and csstIds.size() &gt; 0">
				and csst_id in
				<foreach close=")" collection="csstIds" item="csstId" open="(" separator=",">
					#{csstId}
				</foreach>
			</if>
		</where>
		group by CSST_ID
	</select>
	<select id="queryCsstDurationMap" resultType="map">
		SELECT
		CSST_ID,sum(LESSON_DURATION) from CLASS_LESSON
		<where>
			<if test="null != csstIds and csstIds.size() &gt; 0">
				and csst_id in
				<foreach close=")" collection="csstIds" item="csstId" open="(" separator=",">
					#{csstId}
				</foreach>
			</if>
		</where>
		group by CSST_ID
	</select>

	<select id="queryFinishedClassLessons" resultMap="BaseResultMap">
		SELECT
		<include refid="Base_Column_List_alias" />
		FROM CLASS_LESSON a
		<where>
			<if test="null != startTime">
				and a.end_time &gt;=#{startTime}
			</if>
			<if test="null != endTime">
				and #{endTime} &gt;= a.end_time
			</if>
			and 5&gt; status AND IS_DISCARD=0
		</where>
		order by a.start_time
		<if test="pageDto != null">
			limit
			${(pageDto.pageNum-1)*pageDto.pageSize},#{pageDto.pageSize}
		</if>
	</select>

	<!-- 查询已经结束且需要转结的课节 -->
	<select id="queryWaitCostClassLessons" resultMap="BaseResultMap">
		SELECT
		<include refid="Base_Column_List_alias" />
		FROM CLASS_LESSON a
		<where>
			status&gt;= 5 AND HAS_COST=0 AND IS_DISCARD=0
		</where>
		order by a.start_time
		<if test="pageDto != null">
			limit
			${(pageDto.pageNum-1)*pageDto.pageSize},#{pageDto.pageSize}
		</if>
	</select>

	<!-- 查询未结课的课节 -->
	<select id="queryNoEndClassLessons" resultMap="BaseResultMap">
		SELECT
		<include refid="Base_Column_List_alias" />
		FROM CLASS_LESSON a
		<where>
			status &lt; 5 AND HAS_COST=0
			<if test="entity.classId != null">
				AND CLASS_ID = #{entity.classId}
			</if>
			<if test="entity.roomId != null">
				AND ROOM_ID = #{entity.roomId}
			</if>
			<if test="entity.stageId != null">
				AND STAGE_ID = #{entity.stageId}
			</if>
			<if test="entity.subjectId != null">
				AND SUBJECT_ID = #{entity.subjectId}
			</if>
		</where>
	</select>

	<!-- 班级维度批量查询课节 -->
	<select id="queryListByClassIds" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List_alias" />
		from class_lesson a
		<where>
			and a.class_id in
			<foreach close=")" collection="classIds" item="classId" open="(" separator=",">
				#{classId}
			</foreach>
			<if test="null != startTime">
				and a.start_time &gt;= #{startTime}
			</if>
			<if test="null != endTime">
				and #{endTime} &gt;= a.end_time
			</if>
			<if test="teacherStaffNos != null and teacherStaffNos.size() > 0">
				AND EXISTS (
					SELECT 1 FROM LESSON_TEACHER LT WHERE LT.LESSON_ID = A.ID AND
					LT.TEACHER_STAFF_NO IN
					<foreach collection="teacherStaffNos" separator="," open="(" close=")" item="item">
						 #{item}
					</foreach>
					 AND TEACHER_TYPE = 1
				)
			</if>
			<if test="subjectId != null">
				AND a.SUBJECT_ID = #{subjectId}
			</if>
			AND IS_DISCARD=0
		</where>
		order by a.start_time desc
	</select>

	<!-- 根据反馈id 获取反馈对应的课节信息 -->
	<select id="queryClassLessons" resultMap="BaseResultMap">
		SELECT
		    CL.*
		FROM
		    FEED_BACK_STAGE FBS
		,   CLASS_LESSON    CL
		WHERE
		    CL.CLASS_ID         =   FBS.CLASS_ID
		AND CL.STAGE_ID         =   FBS.STAGE_ID
		AND CL.BATCH_NUM        =   FBS.BATCH_NUM
		AND (
				CL.SUBJECT_ID=-1
			OR
			(
				CL.SUBJECT_ID!=-1 AND CL.SUBJECT_ID=FBS.SUBJECT_ID
			)
		)
		AND FBS.FEED_BACK_ID    =   #{feedBackId}
	</select>

	<!-- 据场地和状态查询课节 -->
	<select id="countByRoomAndStatus" resultType="int">
		select count(*) from class_lesson
		<where>
			is_discard = 0
			<if test="placeId != null">
				and room_id = #{placeId}
			</if>
			<if test="statuses != null and statuses.size()&gt;0">
				and status in
				<foreach close=")" collection="statuses" item="status" open="(" separator=",">
					#{status}
				</foreach>
			</if>
		</where>
	</select>
	<!-- 根据状态获取课节 -->
	<select id="getRoomIdsByStatus" resultType="long">
		select distinct room_id from class_lesson
		<where>
			<if test="statuses != null and statuses.size()&gt;0">
				and status in
				<foreach close=")" collection="statuses" item="status" open="(" separator=",">
					#{status}
				</foreach>
			</if>
		</where>
	</select>
	<!-- 获取班级课节信息 -->
	<select id="getClassLessonsByCsstId" resultMap="BaseResultMap">
		SELECT
		<include refid="Base_Column_List_alias" />
		FROM CLASS_LESSON a join CLASS_STAGE_SUBJECT_TEACHER b on a.CLASS_ID =
		b.CLASS_ID  AND a.IS_DISCARD=0
		<where>
			AND b.id = #{csstId}
		</where>
	</select>
	<select id="selectNeedUpdateClassLesson" resultMap="BaseResultMap">
		SELECT
			a.ID, b.ID AS CSST_ID, a.CLASS_ID, a.ROOM_ID, a.STAGE_ID, a.SUBJECT_ID, a.BATCH_NUM, a.NODE_ID, a.LESSON_DATE,
			a.LESSON_DURATION, a.START_TIME, a.END_TIME, a.CREATE_TIME, a.UPDATE_TIME, a.CREATOR_ID, a.IS_ADDITIONAL,
			a.`STATUS`, a.HAS_COST, a.HAS_REWARD, a.TEACHER_STAFF_NO, a.IS_LOCAL, a.IS_DISCARD, a.TEACH_WAY,
			a.LESSON_TABLE_DETAIL_ID
		FROM
			class_lesson a
			JOIN class_stage_subject_teacher b
			ON a.CLASS_ID = b.CLASS_ID
				AND a.STAGE_ID = b.STAGE_ID
				AND a.SUBJECT_ID = b.SUBJECT_ID
				AND a.batch_num = b.batch_num
				AND a.teacher_staff_no = b.teacher_staff_no
				AND b.teacher_type = 1
				AND b.ACCIDENT_STATUS= 0
		<where>
			a.class_id = #{classId}
			AND a.stage_id = #{stageId}
			AND a.subject_id = #{subjectId}
			AND a.batch_num = #{batchNum}
			AND a.IS_DISCARD = 0
		</where>
	</select>
	<!-- 更新课节csstId -->
	<update id="updateClassLessonCsstId">
		UPDATE class_lesson a
			JOIN class_stage_subject_teacher b
			ON a.CLASS_ID = b.CLASS_ID
				AND a.STAGE_ID = b.STAGE_ID
				AND a.SUBJECT_ID = b.SUBJECT_ID
				AND a.batch_num = b.batch_num
				AND a.teacher_staff_no = b.teacher_staff_no
				AND b.teacher_type = 1
				AND b.ACCIDENT_STATUS= 0
		SET a.CSST_ID = b.id
		WHERE a.class_id = #{classId}
			AND a.stage_id = #{stageId}
			AND a.subject_id = #{subjectId}
			AND a.batch_num = #{batchNum}
			AND a.IS_DISCARD = 0
	</update>

	<update id="updateClassLessonCsstId_accident">
		UPDATE accident_class_lesson a
			JOIN class_stage_subject_teacher b
			ON a.CLASS_ID = b.CLASS_ID
				AND a.STAGE_ID = b.STAGE_ID
				AND a.SUBJECT_ID = b.SUBJECT_ID
				AND a.batch_num = b.batch_num
				AND a.teacher_staff_no = b.teacher_staff_no
				AND b.teacher_type = 1
		SET a.CSST_ID = b.id
		WHERE a.class_id = #{classId}
			AND a.stage_id = #{stageId}
			AND a.subject_id = #{subjectId}
			AND a.batch_num = #{batchNum}
	</update>

	<resultMap id="timeMap" type="com.huatu.paike.dal.paike.dto.MaxMinTimeDto">
		<result column="CLASS_ID" jdbcType="BIGINT" property="classId" />
		<result column="START_TIME" jdbcType="TIMESTAMP" property="startTime" />
		<result column="END_TIME" jdbcType="TIMESTAMP" property="endTime" />
	</resultMap>
	<!-- 获取最早的开始时间和最晚的结束时间 -->
	<select id="queryMinStartTimeAndMaxEndTime" resultMap="timeMap">
		select min(start_time) start_time,max(end_time) end_time from
		class_lesson
		where class_id = #{classId} AND IS_DISCARD=0
		<if test="stageId !=null">
			and stage_id =#{stageId}
		</if>
		<if test="subjectId !=null">
			and subject_id =#{subjectId}
		</if>
		<if test="batchNum !=null">
			and batch_num =#{batchNum}
		</if>
	</select>
	<!-- 批量获取最早的开始时间和最晚的结束时间 -->
	<select id="queryMinStartTimeAndMaxEndTimeByClassIds" resultMap="timeMap">
		select class_Id, min(start_time) start_time,max(end_time) end_time from
		class_lesson
		where class_id IN
		<foreach collection="classIds" item="item" open="(" close=")" separator="," >
			  #{item}
		</foreach>
		GROUP BY class_id
	</select>

	<!-- 批量获取最早的开始时间和最晚的结束时间 老师编号不为空的-->
	<select id="queryMinStartTimeAndMaxEndTimeByCsstIds" resultMap="timeMap">
		SELECT
		lt.CSST_ID,min(c.start_time) start_time,max(c.end_time) end_time
		FROM
			lesson_teacher lt JOIN class_lesson c ON lt.LESSON_ID=c.ID
		WHERE
			lt.CSST_ID IN
		<foreach collection="csstIds" item="item" open="(" close=")" separator="," >
			#{item}
		</foreach>
		GROUP BY lt.CSST_ID
	</select>

	<select id="queryMinStartTimeAndMaxEndTimeByTeacherNoIsNULLCsstIds" resultMap="timeMap">
		SELECT
			c.CSST_ID,min(c.start_time) start_time,max(c.end_time) end_time
		FROM
			class_lesson c
		WHERE
			c.CSST_ID IN
		<foreach collection="csstIds" item="item" open="(" close=")" separator="," >
			#{item}
		</foreach>
		GROUP BY c.CSST_ID
	</select>

	<select id="queryClassRoomIdsByCsstIds" resultType="map">
		select csst_id,room_id from class_lesson where csst_id in
		<foreach close=")" collection="csstIds" item="csstId" open="(" separator=",">
			#{csstId}
		</foreach>
	</select>

	<select id="countNeedTeacherLesson" resultType="int">
		select count(id) from class_lesson where teacher_staff_no = '' and
		stage_id != 5 and class_id =#{classId} and (stage_id,batch_num) in
		<foreach close=")" collection="stageBatchs" item="item" open="(" separator=",">
			(#{item.stageId},#{item.batchNum})
		</foreach>
	</select>

	<select id="queryStageNotSetTeacherCount" resultType="map">
		SELECT
			CONCAT(STAGE_ID,'_',BATCH_NUM),COUNT(1)
		FROM
			class_lesson
		WHERE
			CLASS_ID = #{classId}
			AND TEACHER_STAFF_NO='' AND (STAGE_ID,BATCH_NUM) IN
			<foreach close=")" collection="StageBatchDto" item="item" open="(" separator=",">
				(#{item.stageId},#{item.batchNum})
			</foreach>
		GROUP BY STAGE_ID,BATCH_NUM
	</select>
	
	<select id="queryCssDaysCount" resultType="map">
		SELECT
			CONCAT(STAGE_ID,'_',SUBJECT_ID,'_',BATCH_NUM),COUNT(DISTINCT LESSON_DATE)
		FROM
			class_lesson
		WHERE
			CLASS_ID = #{classId}
			AND (STAGE_ID,SUBJECT_ID,BATCH_NUM) IN
		<foreach close=")" collection="StageBatchDto" item="item" open="(" separator=",">
			(#{item.stageId},#{item.subjectId},#{item.batchNum})
		</foreach>
		GROUP BY STAGE_ID,SUBJECT_ID,BATCH_NUM
	</select>
	
	<resultMap type="StageLesson2TeacherDto" id="stageLesson2TeacherDto">
		<result column="stageId" jdbcType="BIGINT" property="stageId"/>
		<result column="subjectId" jdbcType="BIGINT" property="subjectId"/>
		<result column="batchNum" jdbcType="INTEGER" property="batchNum"/>
		<result column="csstId" jdbcType="BIGINT" property="csstId"/>
		<result column="lessonId" jdbcType="BIGINT" property="lessonId"/>
		<result column="teacherType" jdbcType="INTEGER" property="teacherType"/>
		<result column="staffNo" jdbcType="VARCHAR" property="staffNo"/>
	</resultMap>
	
	<select id="queryStageSubjectSetTeacherCount" resultMap="stageLesson2TeacherDto">
		SELECT 
			cl.STAGE_ID as stageId,
			cl.SUBJECT_ID as subjectId,
			cl.BATCH_NUM as batchNum,
			cl.CSST_ID as csstId,
			cl.ID as lessonId,
			lt.TEACHER_TYPE as teacherType,
			lt.TEACHER_STAFF_NO as staffNo
		FROM
			class_lesson cl LEFT JOIN lesson_teacher lt on cl.ID=lt.LESSON_ID
		WHERE
			cl.CLASS_ID = #{classId}
			AND (cl.STAGE_ID, cl.SUBJECT_ID, cl.BATCH_NUM) IN
			<foreach close=")" collection="StageBatchDto" item="item" open="(" separator=",">
				(#{item.stageId},#{item.subjectId},#{item.batchNum})
			</foreach>
	</select>
	<!--  -->
	<select id="queryStartedSubject" resultMap="BaseResultMap">
		SELECT CL.*
		FROM   CLASS_LESSON AS CL,
		       (SELECT CLASS_ID,
		               STAGE_ID,
		               SUBJECT_ID,
		               BATCH_NUM,
		               Max(START_TIME) AS START_TIME
		        FROM   CLASS_LESSON
		        WHERE  (STATUS&gt;=4 OR #{now}&gt;START_TIME)
		           AND CLASS_ID = #{classId} AND IS_DISCARD=0
		        GROUP  BY STAGE_ID ASC,
		                  SUBJECT_ID ASC,
		                  BATCH_NUM DESC) AS TEM
		WHERE  CL.CLASS_ID = TEM.CLASS_ID
		   AND CL.STAGE_ID = TEM.STAGE_ID
		   AND CL.SUBJECT_ID = TEM.SUBJECT_ID
		   AND CL.BATCH_NUM = TEM.BATCH_NUM
		   AND CL.START_TIME = TEM.START_TIME
	</select>

	<select id="queryStartedClassLessonByStageSubject" resultMap="BaseResultMap">
		SELECT CL.*
		FROM   CLASS_LESSON AS CL,
		       (SELECT CLASS_ID,
		               STAGE_ID,
		               SUBJECT_ID,
		               Max(START_TIME) AS START_TIME
		        FROM   CLASS_LESSON
		        WHERE  (STATUS&gt;=4 OR NOW()&gt;START_TIME)
		           AND CLASS_ID = #{classId}  AND IS_DISCARD=0
		           AND (STAGE_ID,SUBJECT_ID) IN
		           <foreach close=")" collection="stageSubjects" item="item" open="(" separator=",">
		           		(#{item.stageId},#{item.subjectId})
		           </foreach>
		        GROUP  BY STAGE_ID ASC,
		                  SUBJECT_ID ASC) AS TEM
		WHERE  CL.CLASS_ID = TEM.CLASS_ID
		   AND CL.STAGE_ID = TEM.STAGE_ID
		   AND CL.SUBJECT_ID = TEM.SUBJECT_ID
		   AND CL.START_TIME = TEM.START_TIME
	</select>

	<select id="queryEndLesson" resultType="long">
		SELECT
		    CL.ID
		FROM
		    CLASS_LESSON    CL
		WHERE
		    5   &gt;   CL.STATUS AND CL.IS_DISCARD=0
		AND NOT EXISTS(
		        SELECT
		            1
		        FROM
		            LESSON_TIME_DETAIL  LTD
		        WHERE
		            CL.ID           =   LTD.LESSON_ID
		        AND LTD.END_TIME    &gt;   #{now}
		    )
	</select>

	<select id="queryStartedLesson" resultType="long">
		SELECT
		    CL.ID
		FROM
		    CLASS_LESSON    CL
		WHERE
		    4   &gt;   CL.STATUS AND CL.IS_DISCARD=0
		AND #{now}&gt;CL.START_TIME AND CL.END_TIME&gt;#{now}
	</select>

	<select id="queryHasAccidentStatus" resultType="map">
		SELECT
			cl.ID,
			csst.ACCIDENT_STATUS
		FROM
			class_lesson cl,
			class_stage_subject_teacher csst
		<where>
			cl.CSST_ID = csst.ID
			<if test="lessonIds!=null and lessonIds.size&gt;0">
				AND cl.ID IN
				<foreach close=")" collection="lessonIds" item="item" open="(" separator=",">
					#{item}
				</foreach>
			</if>
		</where>
		GROUP BY
			cl.ID
	</select>

	<select id="queryStudentCsstDaysMap" resultType="map">
		SELECT
		cl.CSST_ID,count(DISTINCT cl.LESSON_DATE) from CLASS_LESSON cl,LESSON_STUDENT ls
		<where>
			cl.ID = ls.LESSON_ID
			<if test="null != csstIds and csstIds.size() &gt; 0">
				and cl.csst_id in
				<foreach close=")" collection="csstIds" item="csstId" open="(" separator=",">
					#{csstId}
				</foreach>
			</if>
			and ls.student_id = #{studentId}
		</where>
		group by cl.CSST_ID
	</select>
	<select id="queryStudentCsstDurationMap" resultType="map">
		SELECT
		cl.CSST_ID,sum(cl.LESSON_DURATION) from CLASS_LESSON cl,LESSON_STUDENT ls
		<where>
			cl.ID = ls.LESSON_ID
			<if test="null != csstIds and csstIds.size() &gt; 0">
				and cl.csst_id in
				<foreach close=")" collection="csstIds" item="csstId" open="(" separator=",">
					#{csstId}
				</foreach>
			</if>
			and ls.student_id = #{studentId}
		</where>
		group by cl.CSST_ID
	</select>

	<!-- 批量插入 -->
	<insert id="insertAll" parameterType="java.util.List">
		insert into class_lesson
		(CSST_ID, CLASS_ID, ROOM_ID, STAGE_ID, SUBJECT_ID, BATCH_NUM, NODE_ID, LESSON_DATE,
		LESSON_DURATION, START_TIME, END_TIME, CREATE_TIME, UPDATE_TIME, CREATOR_ID, IS_ADDITIONAL,
		STATUS, HAS_COST, HAS_REWARD, TEACHER_STAFF_NO, IS_LOCAL, IS_DISCARD, TEACH_WAY, LESSON_TABLE_ID)
		values
		<foreach collection="list" item="it" separator=",">
			(#{it.csstId}, #{it.classId}, #{it.roomId}, #{it.stageId}, #{it.subjectId},
			#{it.batchNum}, #{it.nodeId}, #{it.lessonDate}, #{it.lessonDuration}, #{it.startTime},
			#{it.endTime}, #{it.createTime}, #{it.updateTime}, #{it.creatorId}, #{it.isAdditional},
			#{it.status}, #{it.hasCost}, #{it.hasReward}, #{it.teacherStaffNo}, #{it.isLocal},
			#{it.isDiscard}, #{it.teachWay}, #{it.lessonTableId})
		</foreach>
	</insert>

	<select id="getClassIdsByRoomId" resultType="long">
		select distinct cl.CLASS_ID from class_lesson cl, class_info ci
		<where>
            cl.is_discard = 0 and ci.id = cl.class_id
            <if test="roomId != null">
                and cl.room_id = #{roomId}
            </if>
            order by ci.begin_time desc
            <if test="pageDto != null">
                limit ${(pageDto.pageNum-1)*pageDto.pageSize},#{pageDto.pageSize}
            </if>
		</where>
	</select>
	
	<select id="queryByPageDto" resultMap="BaseResultMap">
		SELECT
		<include refid="Base_Column_List" />
		FROM CLASS_LESSON order by id desc limit ${(pageDto.pageNum-1)*pageDto.pageSize},#{pageDto.pageSize}
	</select>
	

    <select id="countClassIdsByRoomId" resultType="java.lang.Integer">
        select count(distinct CLASS_ID) from class_lesson
        <where>
            is_discard = 0
            <if test="roomId != null">
                and room_id = #{roomId}
            </if>
        </where>
    </select>
    
    <select id="queryMinRoomContent" resultType="int">
    	SELECT
			MIN(p.CONTENT)
		FROM
			class_lesson cl,
			place p 
		<where>
			cl.ROOM_ID = p.ID 
			AND cl.CLASS_ID =#{classId}
			<if test="stageId!=null">
				AND cl.STAGE_ID=#{stageId}				
			</if>
			<if test="subjectId!=null">
				AND cl.SUBJECT_ID=#{subjectId}
			</if>
			<if test="batchNum!=null">
				AND cl.BATCH_NUM=#{batchNum}
			</if>
		</where>
    </select>
	
	<select id="queryHasFinishedNotCostLesson" resultMap="BaseResultMap">
		SELECT *
		FROM class_lesson
		<where>
			IS_DISCARD=0 AND STATUS>=5 AND HAS_COST=0
		</where>
		<include refid="pageTool"/>
	</select>
	
	<select id="queryLossLesson" resultMap="BaseResultMap">
		SELECT * 
		FROM class_lesson cl
		WHERE cl.CLASS_ID=#{classId} 
		AND cl.STAGE_ID=#{stageId} 
		AND cl.SUBJECT_ID=#{subjectId} 
		AND cl.BATCH_NUM=#{batchNum} 
		AND cl.ORDER_NO=#{orderNo} 
		AND NOT EXISTS(
			SELECT 1 FROM  lesson_student ls
			WHERE cl.CLASS_ID=ls.CLASS_ID 
			AND cl.stage_id=ls.STAGE_ID 
			AND cl.subject_id=ls.SUBJECT_ID 
			AND cl.BATCH_NUM= ls.BATCH_NUM
		)
	</select>
	
	<select id="queryLessonByCsstId" resultMap="BaseResultMap">
		SELECT
			distinct tem.*
		FROM
			(
			SELECT 
				cl.*
			FROM
				class_lesson cl,lesson_teacher lt
			WHERE
				cl.id=lt.LESSON_ID AND lt.TEACHER_TYPE=2 AND lt.CSST_ID=#{csstId}
			UNION
			SELECT
				cl.*
			FROM
				class_lesson cl,class_stage_subject_teacher csst
			WHERE
				csst.ID=#{csstId} AND csst.ID=cl.CSST_ID AND csst.TEACHER_TYPE=1
			) as tem
	</select>

	<select id="queryLessonIdByClassNoList" resultType="long">
		select distinct a.ID from class_Lesson a, class_info b
		<where>
			a.CLASS_ID = b.ID
			<if test="classNos != null and classNos.size() > 0">
				and b.CLASS_NO in
				<foreach collection="classNos" close=")" item="classNo" open="(" separator=",">
					#{classNo}
				</foreach>
			</if>
		</where>
	</select>
</mapper>