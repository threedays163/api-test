<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.huatu.paike.dal.place.mapper.ClassRoomMapper">
	<resultMap id="BaseResultMap" type="com.huatu.paike.dal.place.entity.ClassRoom">
		<!-- WARNING - @mbg.generated -->
		<id column="ID" jdbcType="BIGINT" property="id" />
		<result column="TYPE" jdbcType="TINYINT" property="type" />
		<result column="PLACE_ID" jdbcType="BIGINT" property="placeId" />
		<result column="NODE_ID" jdbcType="BIGINT" property="nodeId" />
		<result column="AREA_ID" jdbcType="BIGINT" property="areaId" />
		<result column="LOCATION" jdbcType="VARCHAR" property="location" />
		<result column="CONTENT" jdbcType="INTEGER" property="content" />
		<result column="SIGN_DATE" jdbcType="TIMESTAMP" property="signDate" />
		<result column="EXPIRE_DATE" jdbcType="TIMESTAMP" property="expireDate" />
		<result column="IS_EFFECTIVE" jdbcType="TINYINT" property="isEffective" />
		<result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
		<result column="UPDATE_TIME" jdbcType="TIMESTAMP" property="updateTime" />
		<result column="CREATOR_ID" jdbcType="BIGINT" property="creatorId" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<!-- WARNING - @mbg.generated -->
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		<!-- WARNING - @mbg.generated -->
		ID, `TYPE`, PLACE_ID, NODE_ID, AREA_ID, `LOCATION`, CONTENT,
		SIGN_DATE, EXPIRE_DATE,
		IS_EFFECTIVE, CREATE_TIME, UPDATE_TIME,
		CREATOR_ID
	</sql>
	<delete id="deleteByFilter" parameterType="com.huatu.paike.dal.place.entity.ClassRoomCriteria">
		<!-- WARNING - @mbg.generated -->
		delete from CLASS_ROOM
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>

	<insert id="saveAll" parameterType="java.util.List">
		<if test="list != null and list.size()>0">
			insert into CLASS_ROOM(
			`TYPE`, PLACE_ID, NODE_ID, AREA_ID, `LOCATION`, CONTENT,
			SIGN_DATE, EXPIRE_DATE,
			IS_EFFECTIVE, CREATOR_ID
			) values
			<foreach collection="list" item="classRoom" separator=",">
				(
					#{classRoom.type},#{classRoom.placeId},#{classRoom.nodeId},#{classRoom.areaId},#{classRoom.location},
					#{classRoom.content},#{classRoom.signDate},#{classRoom.expireDate},#{classRoom.isEffective},#{classRoom.creatorId}
				)
			</foreach>
		</if>
	</insert>

	<update id="update" parameterType="com.huatu.paike.dal.place.entity.ClassRoom">
		update CLASS_ROOM
		<trim prefix="set" suffix="where id = #{id}" suffixOverrides=",">
			<if test="location != null and !location.trim().equals('')">
				location = #{location},
			</if>
			<if test="content != null">
				content = #{content},
			</if>
			update_time = CURRENT_TIMESTAMP,
		</trim>
	</update>

	<update id="delById" parameterType="long">
		update CLASS_ROOM set
		is_effective = 0 where id = #{id}
	</update>

	<select id="getByPlaceId" parameterType="long" resultMap="BaseResultMap">
		select
		* from CLASS_ROOM where place_id = #{placeId}
	</select>

	<update id="changeEffStatus" parameterType="com.huatu.paike.dal.place.dto.UpdateParams">
		update CLASS_ROOM
		<set>
			<if test="isEffective != null">
				is_effective = #{isEffective}
			</if>
		</set>
		where place_id in
		<if test="placeIds != null and placeIds.size()>0">
			<foreach collection="placeIds" item="id" open="(" separator=","
				close=")">
				#{id}
			</foreach>
		</if>
	</update>

	<select id="queryList" parameterType="com.huatu.paike.dal.place.dto.ClassRoomQueryParam"
		resultMap="BaseResultMap">
		select * from CLASS_ROOM
		<include refid="List_Where_Condition" />
		order by create_time desc
		<if test="pageDto != null">
			limit
			${(pageDto.pageNum-1)*pageDto.pageSize},#{pageDto.pageSize}
		</if>
	</select>

	<select id="countQuery" parameterType="com.huatu.paike.dal.place.dto.ClassRoomQueryParam"
		resultType="int">
		select count(*) from CLASS_ROOM
		<include refid="List_Where_Condition" />
	</select>

	<sql id="List_Where_Condition">
		<where>
			<if test="id != null">
				and id = #{id}
			</if>
			<if test="type != null">
				and type = #{type}
			</if>
			<if test="types != null and types.size() > 0">
				and type in
				<foreach collection="types" item="type" open="(" separator="," close=")">
					#{type}
				</foreach>
			</if>
			<if test='classroomQuery !=null and !classroomQuery.trim().equals("")'>
				and location like concat('%',#{classroomQuery},'%')
			</if>
			<if test="ids != null and ids.size()>0">
				and id in
				<foreach collection="ids" item="item" open="(" separator=","
					close=")">
					#{item}
				</foreach>
			</if>
			<if test="placeId != null">
				and place_id = #{placeId}
			</if>
			<if test="placeIds != null and placeIds.size()>0">
				and place_id in
				<foreach collection="placeIds" item="item" open="("
					separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test="nodeIds != null and nodeIds.size()>0">
				and node_id in
				<foreach collection="nodeIds" item="item" open="("
					separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test="areaId !=null">
				and area_id = #{areaId}
			</if>
			<if test="isEffective !=null">
				and is_effective = #{isEffective}
			</if>
			<if
				test="multipleEffectiveStatus != null and
				multipleEffectiveStatus.size()>0">
				and is_effective in
				<foreach collection="multipleEffectiveStatus" item="isEffective"
					open="(" close=")" separator=",">
					#{isEffective}
				</foreach>
			</if>
		</where>
	</sql>
</mapper>